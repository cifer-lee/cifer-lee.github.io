<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on 编程笔记</title><link>https://cifer97.github.io/categories/python/</link><description>Recent content in Python on 编程笔记</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 26 Nov 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://cifer97.github.io/categories/python/index.xml" rel="self" type="application/rss+xml"/><item><title>关于 Python 中的 time 与 datetime 模块</title><link>https://cifer97.github.io/posts/python-time-datetime/</link><pubDate>Sun, 26 Nov 2017 00:00:00 +0000</pubDate><guid>https://cifer97.github.io/posts/python-time-datetime/</guid><description>在 Python 中处理时间有两个库可用: time 和 datetime, 这两个模块曾经在很长一段时间里困扰着我, 我觉得这是 Python 又一处矛盾的地方 (最大的矛盾是 3 和 2 不兼容), 因为一门对开发者友好的语言应该直接提供最好用的库, 而不是让开发者去做选择.
看看 time 与 datetime 的区别, 以及它们的设计用意, 其实从 Python 标准库手册上就能看出来, time 模块位于 &amp;ldquo;16. Generic Operating System Services&amp;rdquo; 这一节, 处于这一节的还有 os, getopt 等模块, 而 datetime则位于 &amp;ldquo;8. Data Types&amp;rdquo; 这一节. 因为 time 是被开发来包裹系统调用的 &amp;mdash; 也就是 &amp;lt;time.h&amp;gt; 头文件那些方法, datetime 才是开发来专门作为时间工具库的. 实际上 time 模块是 C 写的, datetime 模块则是 python 写的.
既然是专注于时间处理, 又不需要特意去对应 &amp;lt;time.h&amp;gt;, datetime 模块自然是功能更全一些, 方法更亲民一些, 所以现在的趋势也是使用 datetime 模块.</description></item></channel></rss>