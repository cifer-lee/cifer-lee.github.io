<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bitcoin on 编程笔记</title><link>https://cifer97.github.io/categories/bitcoin/</link><description>Recent content in Bitcoin on 编程笔记</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 24 Oct 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://cifer97.github.io/categories/bitcoin/index.xml" rel="self" type="application/rss+xml"/><item><title>说一说重放, 重放保护, 以及分叉期间我们该怎么做</title><link>https://cifer97.github.io/posts/bitcoin-replay/</link><pubDate>Tue, 24 Oct 2017 00:00:00 +0000</pubDate><guid>https://cifer97.github.io/posts/bitcoin-replay/</guid><description>何为重放 先说重放, 重放指的是分叉过后, 由于新链和旧链所运行的协议可能完全兼容, 导致在旧链上发生的交易拿到新链上也是合法的. 以本次的即将上演的 BTC/BTG 分叉为例:
在高度 A 左右我们生成了两个新地址 a, b. 然后在高度 B 的时候, BTC 链分出了 BTG 链 (也就是三角形那条, 图里忘了标了). 重放是怎么发生的呢?
假如我们现在在 BTC 链上发起交易 a -&amp;gt; b, 由于 BTC 网络的交易是明文全网广播的, 所以 b 很容易在 BTC 网络截获到这个 a -&amp;gt; b 交易广播, 然后 b 只要把这个广播全文拿到 BTG 网络上再进行一次广播, 这就达成了重放. 可以说是 b 对 a 做了一次重放攻击.
同理, 如果 a -&amp;gt; b 的交易最初是在 BTG 链上发起的, 那么这次交易广播也很容易被拿来在 BTC 链上重放. 这就是双向重放.
总之重放的后果是显而易见的, 如果上例中 a 是你, b 是我, 那么原本在另一条链上属于你的钱, 就会被一并转给我.</description></item><item><title>闲聊即将到来的 segwit2x 分叉</title><link>https://cifer97.github.io/posts/segwit2x/</link><pubDate>Mon, 23 Oct 2017 00:00:00 +0000</pubDate><guid>https://cifer97.github.io/posts/segwit2x/</guid><description>早些时候由矿工主导的 &amp;ldquo;纽约共识&amp;rdquo; 达成了 segwit2x 方案, 约定在 2017 年 9 月以前启动隔离见证, 并在随后的 3 - 6 个月内启动 2mb 扩容. 所以 segwit2x 这个名字起的有意思, 看着好像跟 segwit 2.0 版一样, 实际上 segwit2x 指包含两部分, segwit 是隔离见证, 2x 便是指区块容量扩至 2mb.
既然达成了 &amp;ldquo;共识&amp;rdquo;, 为什么还说会有分叉呢, 原因是这一 &amp;ldquo;共识&amp;rdquo; 并没有得到 core 开发组的支持, core 开发组一直以来维护着 bitcoin core 核心代码, 也就是 Satoshi 最初的代码, 在社区里声望一直极高. 虽然 core 向来是支持 segwit 的, 但是并不支持 2x, 所以 11 月份的分叉也就是在 core 开发组和 segwit2x 支持者 (主要是矿工) 之间产生的分叉, 也被称作 1x 与 2x 之争.</description></item><item><title>Electrum 钱包的 sweep 功能小记</title><link>https://cifer97.github.io/posts/electrum-sweep/</link><pubDate>Tue, 17 Oct 2017 00:00:00 +0000</pubDate><guid>https://cifer97.github.io/posts/electrum-sweep/</guid><description>electrum 是款优秀的 bitcoin 轻钱包, bitcoin.org 的文章里经常有提到它, 可见 bitcoin.org 除了自己的 core 钱包之外还是比较推荐 electrum 的.
使用 electrum 钱包时, 建议的生成私钥的方式是从 seed 生成, 这样所有生成的密钥都是可以从 seed 推算出来的, 对钱包的备份也就简化为对 seed 的备份.
sweep 功能 electrum 有一个 sweep 功能, 刚开始乍一看我惊诧的以为这个功能是销毁钱包, 因为这个功能就在 &amp;ldquo;Private keys -&amp;gt; sweep&amp;rdquo; 菜单下, 看着意思就像 &amp;ldquo;清除所有私钥&amp;rdquo; 一样, 实际上当然不是的, sweep 存在的目的是让我们把其它客户端生成的私钥导入到我们在 electrum 中使用 seed 生成的钱包中.
导入私钥本应该是个很简单直接的事情, 但是由于 seed 方式生成的钱包的特点就是里面的私钥都是可以由 seed 推导出来的确定性私钥, 随便导入一个我们在其它客户端生成的私钥自然是不行的. 因此就引入了这个 sweep 机制, sweep 的本质就是将你在其他客户端上所生成的私钥的所有余额发送到这个钱包中由 seed 生成的某个私钥上.
所以 &amp;ldquo;sweep&amp;rdquo; 指的是 sweep 别的客户端生成的私钥, 而不是 seed 钱包里的私钥.</description></item></channel></rss>