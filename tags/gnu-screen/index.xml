<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>gnu screen on</title><link>https://cifer76.github.io/tags/gnu-screen/</link><description>Recent content in gnu screen on</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 13 Jan 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://cifer76.github.io/tags/gnu-screen/index.xml" rel="self" type="application/rss+xml"/><item><title>GNU Screen Tutorial</title><link>https://cifer76.github.io/posts/gnu-screen-tutorial/</link><pubDate>Mon, 13 Jan 2014 00:00:00 +0000</pubDate><guid>https://cifer76.github.io/posts/gnu-screen-tutorial/</guid><description>概念 会话, screen 有自己的会话的概念, 当你运行 screen 命令后, 你就启动了一个 &amp;ldquo;会话&amp;rdquo;. 下文中的&amp;quot;会话&amp;quot;都是指 screen 会话. 窗口, 每一个会话可以包含一至多个窗口, 在每一个窗口中, 你可以做单独的工作. 比如说在窗口1 中开着 vim 写作, 在窗口2 中运行 netstat 监控网络, 而第三个窗口保持 bash shell 不做其他的事 默认情况下, 当你运行 screen 之后, screen 将为你建立一个会话, 并且为你建立一个默认的窗口, 并且, 为你在这个窗口中运行 bash shell.
优点 使用 screen 的优点是很多的, 尤其是你需要 ssh 登录到远程主机进行工作的时候, screen 可以帮助你使你即使从远程主机退出了, 你的工作也能够继续, 这是其一, 另一点就是它可以帮你&amp;quot;节省终端&amp;quot; - 当你需要登录远程做多个工作的时候, 你不必开多个终端分别 ssh 登录远程, 然后分别做各自的工作. 这在 多个窗口 这一节会分析.
运行 screen 只需要简单的执行 screen 命令:
$ screen 一般来说, 你会看到一屏关于 screen 程序的介绍和版权信息, 根据按空格或回车就能跳过.</description></item></channel></rss>