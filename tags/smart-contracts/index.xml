<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>smart contracts on</title><link>/tags/smart-contracts/</link><description>Recent content in smart contracts on</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 11 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="/tags/smart-contracts/index.xml" rel="self" type="application/rss+xml"/><item><title>以太坊智能合约快速上手</title><link>/posts/ethereum-smart-contract-quickstart/</link><pubDate>Tue, 11 May 2021 00:00:00 +0000</pubDate><guid>/posts/ethereum-smart-contract-quickstart/</guid><description>这两天学习以太坊合约开发, 不得不说以太坊社区是真 &amp;ldquo;繁荣&amp;rdquo;, 网上的教程多得数不胜数, 为什么繁荣加引号呢, 因为从这些教程的质量来看就知道, 以太坊社区的繁荣是各自为营, 社区里各式各样的团队各怀鬼胎的搞以太坊的生态建设, 而实际上根本目的都是为了推销自己的 dapp, 试图扩大自己在生态圈里的虚名，做以太坊社区 V 神之下的老二. V 神显然也不想做领袖角色, 社区就让他自由发展吧!
可是官方文档你好歹整好点, 我在官方想找个智能合约的 quickstart 都找不到, 官方文档说两句就丢你给个 remix 或者 truffle 等工具链接让你用那些工具写智能合约. 这不是我想要的, 我想学习的是不借助任何那些花里胡哨的 IDE 怎么把合约部署到主链上, 官方文档却不教你这一点, 没有这个信息, 即使有可能也是某个开发者的个人博客上有介绍(可能也是自己研究之后做个笔记), 而那些花里胡哨的工具的文档只会介绍自己的工具怎么样, 更不会跟你说底层原理.
不得已, 我只能多花了些时间把智能合约的开发部署捋了一遍. 下面我会摈弃虚华的外表, 让你能以最小的学习成本 + 最快的速度完成一个智能合约并发布.
开发环境搭建 环境方面我们需要:
一个趁手的编辑器, 我选 vim 你随意 智能合约的编译器, 我们选择 solcjs 以太坊节点, 我们选择 geth 需要搭建一个测试或者私有网络, 我们选择 rinkeby 测试网络 关于开发环境方面上述 4 点是我摸索出来成本最低最省事而又最接近在主网部署合约的配置, 诸位如果是第一次接触以太坊智能合约开发大可放心按我的方式来.
反观以太坊的官方文档, 看看它是怎么叫我们搭本地开发环境的:
https://ethereum.org/en/developers/local-environment/ 看到了吗, 直接甩给你一堆框架, 谁知道用哪个好, 官方就不能tm多写点自己写个教程吗. 算了, 闲槽少吐, 我们直接开始我们自己的流程.</description></item></channel></rss>