<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on</title><link>https://cifer76.github.io/tags/python/</link><description>Recent content in python on</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 24 Apr 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://cifer76.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>也谈 Python 与 Unicode</title><link>https://cifer76.github.io/posts/python-unicode/</link><pubDate>Mon, 24 Apr 2017 00:00:00 +0000</pubDate><guid>https://cifer76.github.io/posts/python-unicode/</guid><description>Unicode 与 UTF8 的关系 unicode 定义了统一的字符集, UTF8 则是一种编码 unicode 字符集的方式.
在 python2 中, str 类型, unicode 类型都是 basestring 的子类, 其中 str 类型就好比 C 语言中的字符串, unicode 类型就好比 C 语言中的宽字符串. 因为 UTF8 的编码方式不使用 0x0 填充, 一串 UTF8 字符流实际上也是一串合法的 C 字符流 (0x0 结尾) &amp;mdash; 也就是合法的 str 类型的字符流.
编程相关的编码问题 关于编程语言的编码问题, 可能会涉及到这么几个内容:
源文件自身的编码 编辑器/IDE 所理解的源文件的编码方式 编译器/解释器对源代码中字符常量的处理方式 下文我们会一一说明.
源文件自身的编码 源文件自身的编码是由谁决定的呢? 实际是我们自己决定的, 还记得保存文件时弹出的对话框吗? 对话框中有一个选项就是文件的格式, 可能大部分人没有关注, 如果我们不去更改它的话, 那文件就以操作系统的默认编码格式存储了. 通常这在 Linux, MacOS 上是 UTF8, 某些中文 Windows 系统上是 GBK.</description></item></channel></rss>